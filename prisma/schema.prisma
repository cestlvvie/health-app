generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model country {
  cname      String     @id @db.VarChar(50)
  population BigInt?
  discover   discover[]
  record     record[]
  users      users[]
}

model discover {
  cname          String    @db.VarChar(50)
  disease_code   String    @db.VarChar(50)
  first_enc_date DateTime? @db.Date
  country        country   @relation(fields: [cname], references: [cname], onDelete: Cascade, onUpdate: NoAction)
  disease        disease   @relation(fields: [disease_code], references: [disease_code], onDelete: Cascade, onUpdate: NoAction)

  @@id([cname, disease_code])
}

model disease {
  disease_code   String           @id @db.VarChar(50)
  pathogen       String?          @db.VarChar(20)
  description    String?          @db.VarChar(140)
  id             Int?
  discover       discover[]
  diseasetype    diseasetype?     @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  patientdisease patientdisease[]
  record         record[]
}

model diseasetype {
  id          Int          @id
  description String?      @db.VarChar(140)
  disease     disease[]
  specialize  specialize[]
}

model doctor {
  email      String       @id @db.VarChar(60)
  degree     String?      @db.VarChar(20)
  users      users        @relation(fields: [email], references: [email], onDelete: Cascade, onUpdate: NoAction)
  specialize specialize[]
}

model patientdisease {
  email        String  @db.VarChar(60)
  disease_code String  @db.VarChar(50)
  disease      disease @relation(fields: [disease_code], references: [disease_code], onDelete: Cascade, onUpdate: NoAction)
  users        users   @relation(fields: [email], references: [email], onDelete: Cascade, onUpdate: NoAction)

  @@id([email, disease_code])
}

model patients {
  email String @id @db.VarChar(60)
  users users  @relation(fields: [email], references: [email], onDelete: Cascade, onUpdate: NoAction)
}

model publicservant {
  email      String   @id @db.VarChar(60)
  department String?  @db.VarChar(50)
  users      users    @relation(fields: [email], references: [email], onDelete: Cascade, onUpdate: NoAction)
  record     record[]
}

model record {
  email          String        @db.VarChar(60)
  cname          String        @db.VarChar(50)
  disease_code   String        @db.VarChar(50)
  total_deaths   Int?
  total_patients Int?
  country        country       @relation(fields: [cname], references: [cname], onDelete: Cascade, onUpdate: NoAction)
  disease        disease       @relation(fields: [disease_code], references: [disease_code], onDelete: Cascade, onUpdate: NoAction)
  publicservant  publicservant @relation(fields: [email], references: [email], onDelete: Cascade, onUpdate: NoAction)

  @@id([email, cname, disease_code])
}

model specialize {
  id          Int
  email       String      @db.VarChar(60)
  doctor      doctor      @relation(fields: [email], references: [email], onDelete: Cascade, onUpdate: NoAction)
  diseasetype diseasetype @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([id, email])
}

model users {
  email          String           @id @db.VarChar(60)
  name           String?          @db.VarChar(30)
  surname        String?          @db.VarChar(40)
  salary         Int?
  phone          String?          @db.VarChar(20)
  cname          String?          @db.VarChar(50)
  doctor         doctor?
  patientdisease patientdisease[]
  patients       patients?
  publicservant  publicservant?
  country        country?         @relation(fields: [cname], references: [cname], onDelete: Cascade, onUpdate: NoAction)
}
